name: PyTest

on: [push, pull_request]

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # cache the ASDF directory, using values from .tool-versions
      - name: ASDF Cache
        uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os}}-asdf-${{ hashFiles('.tool-versions') }}
        id: asdf-cache

      # run `asdf install` iff we can't find the cache
      - uses: asdf-vm/actions/install@v1
        if: steps.asdf-cache.outputs.cache-hit != 'true'

  py_build:
    name: Build and Test Python
    runs-on: ubuntu-latest
    needs: asdf
    defaults:
      run:
        working-directory: py_gtfs_rt_ingestion

    steps:
      # checkout code
      - name: Checkout Code
        uses: actions/checkout@v2

      # check that the asdf cache was in the correct place
      - name: ASDF Cache
        uses: actions/cache@v2
        with:
          path: ~/.asdf
          key: ${{ runner.os}}-asdf-${{ hashFiles('.tool-versions') }}
        id: asdf-cache

      # custom mbta action to reshim asdf without reinstall
      - uses: mbta/actions/reshim-asdf@v1

      # if cache was not found, exit
      - run: exit 1
        if: steps.asdf-cache.outputs.cache-hit != 'true'

      # install dependencies via poetery
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      # run code formatting / static typing / linting checks
      - name: Check code formatting with Black
        run: poetry run black . --check
      - name: Check static typing with mypy
        run: poetry run mypy .
      - name: Run linting with pylint
        run: poetry run pylint *.py py_gtfs_rt_ingestion/ tests/

      - name: Run Unit Tests
        run: poetry run pytest
