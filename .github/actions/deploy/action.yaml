name: Deploy To Environment
description: Build docker image and deploy it for each data pipeline.
inputs:
  env-name:
    description: One of 'prod', 'staging', or 'dev'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
      - uses: mbta/actions/build-push-ecr@v1
        id: build-push
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker-repo: ${{ secrets.LAMP_DOCKER_URI }}
          dockerfile-path: ./python_src/
      - uses: mbta/actions/deploy-ecs@v1
        id: deploy-ingestion
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ecs-cluster: lamp
          ecs-service: lamp-ingestion-${{env-name}}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - uses: mbta/actions/deploy-ecs@v1
        id: deploy-performance-manager
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ecs-cluster: lamp
          ecs-service: lamp-performance-manager-${{env-name}}
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          job-status: ${{ job.status }}
