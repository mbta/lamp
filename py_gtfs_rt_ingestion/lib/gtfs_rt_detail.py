from abc import ABC
from abc import abstractmethod
from typing import Dict

import pyarrow


class GTFSRTDetail(ABC):
    """
    Abstract Base Class for all GTFSRTDetail implementations.

    GTFSRTDetail classes must implement all methods and properties that are
    defined.
    """

    @property
    @abstractmethod
    def export_schema(self) -> pyarrow.schema:
        """Get the schema for the parquet table generated by this config"""

    @property
    @abstractmethod
    def transformation_schema(self) -> dict:
        """
        Get the transformation schema that describes how what json keys to copy
        and how to remap them if necessary
        """

    def empty_table(self) -> Dict[str, list]:
        """Create an empty table using this details parrow schema."""
        return {key.name: [] for key in self.export_schema}
